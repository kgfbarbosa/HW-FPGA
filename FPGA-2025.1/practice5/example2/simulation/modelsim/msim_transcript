# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do top_module_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {C:/Users/klysm/Documents/practice5/example2/clk_prescaler.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity clk_prescaler
# -- Compiling architecture behavioral of clk_prescaler
# vcom -93 -work work {C:/Users/klysm/Documents/practice5/example2/top_module.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity top_module
# -- Compiling architecture structural of top_module
# vcom -93 -work work {C:/Users/klysm/Documents/practice5/example2/pwm_controller.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity pwm_controller
# -- Compiling architecture behavioral of pwm_controller
# vcom -93 -work work {C:/Users/klysm/Documents/practice5/example2/triangular_generator.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Compiling entity triangular_generator
# -- Compiling architecture behavioral of triangular_generator
# 
vsim work.triangular_generator
# vsim work.triangular_generator 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.numeric_std(body)
# Loading work.triangular_generator(behavioral)
add wave -position end  sim:/triangular_generator/clk
add wave -position end  sim:/triangular_generator/reset_n
add wave -position end  sim:/triangular_generator/triangular_val
force -freeze sim:/triangular_generator/clk 0 0, 1 {10000 ps} -r 20ns
force -freeze sim:/triangular_generator/reset_n 1 0
run
